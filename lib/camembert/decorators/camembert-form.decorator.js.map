{"version":3,"file":"camembert-form.decorator.js","sourceRoot":"","sources":["../../../src/lib/decorators/camembert-form.decorator.ts"],"names":[],"mappings":"AAAA,OAAO,kBAAkB,CAAC;AAE1B,MAAM,CAAC,MAAM,gBAAgB,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAG9C;;;;;;;;GAQG;AACH,MAAM,UAAU,aAAa,CAAC,UAAgD;IAC5E,OAAO,CAAC,MAAc,EAAE,EAAE;QAExB,OAAO,CAAC,cAAc,CAAC,gBAAgB,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;IAC/D,CAAC,CAAA;AACH,CAAC","sourcesContent":["import \"reflect-metadata\";\n\nexport const CamembertFormKey = Symbol('key');\n\n\n/**\n * Camembert form decorator\n *\n * @param middleware the middleware method to execute, the last parameter will be the form instance filled. Handy\n * if you want to validated your form before enter into the controller action.\n *\n * @returns {(target:Object)=>undefined}\n * @constructor\n */\nexport function CamembertForm(middleware: (req, res, next, form: Object)=>void) {\n  return (target: Object) => {\n\n    Reflect.defineMetadata(CamembertFormKey, middleware, target);\n  }\n}\n"]}